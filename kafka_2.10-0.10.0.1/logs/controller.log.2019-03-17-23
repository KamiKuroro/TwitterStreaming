[2019-03-17 23:00:52,734] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children twitterStream,twitterstream (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2019-03-17 23:00:52,745] INFO [TopicChangeListener on Controller 0]: New topics: [Set(twitterstream)], deleted topics: [Set()], new partition replica assignment [Map([twitterstream,0] -> List(0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2019-03-17 23:00:52,745] INFO [Controller 0]: New topic creation callback for [twitterstream,0] (kafka.controller.KafkaController)
[2019-03-17 23:00:52,753] INFO [Controller 0]: New partition creation callback for [twitterstream,0] (kafka.controller.KafkaController)
[2019-03-17 23:00:52,753] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [twitterstream,0] (kafka.controller.PartitionStateMachine)
[2019-03-17 23:00:52,754] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=twitterstream,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2019-03-17 23:00:52,758] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [twitterstream,0] (kafka.controller.PartitionStateMachine)
[2019-03-17 23:00:52,759] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [twitterstream,0] are: [List(0)] (kafka.controller.PartitionStateMachine)
[2019-03-17 23:00:52,759] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [twitterstream,0] to (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2019-03-17 23:00:52,776] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 1 fails to send request {controller_id=0,controller_epoch=1,partition_states=[{topic=twitterstream,partition=0,controller_epoch=1,leader=0,leader_epoch=0,isr=[0],zk_version=0,replicas=[0]}],live_leaders=[{id=0,host=around-gce-es.us-east1-b.c.durable-cacao-231702.internal,port=9092}]} to broker around-gce-es.us-east1-b.c.durable-cacao-231702.internal:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:236)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recursivePoll$2(NetworkClientBlockingOps.scala:137)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollContinuously$extension(NetworkClientBlockingOps.scala:143)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:190)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:181)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2019-03-17 23:00:52,786] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=twitterstream,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2019-03-17 23:00:53,090] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to around-gce-es.us-east1-b.c.durable-cacao-231702.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-03-17 23:04:30,890] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:04:30,890] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:04:30,891] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:04:30,891] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:09:30,890] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:09:30,890] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:09:30,890] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:09:30,890] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:14:30,890] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:14:30,890] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:14:30,890] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:14:30,890] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:14:58,333] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-03-17 23:14:59,083] INFO [Controller 0]: Shutting down broker 0 (kafka.controller.KafkaController)
[2019-03-17 23:14:59,084] DEBUG [Controller 0]: All shutting down brokers: 0 (kafka.controller.KafkaController)
[2019-03-17 23:14:59,085] DEBUG [Controller 0]: Live brokers:  (kafka.controller.KafkaController)
[2019-03-17 23:14:59,088] TRACE [Controller 0]: All leaders = [twitterStream,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),[twitterstream,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2019-03-17 23:15:01,262] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2019-03-17 23:15:01,262] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2019-03-17 23:15:01,264] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2019-03-17 23:15:01,264] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2019-03-17 23:15:01,265] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2019-03-17 23:15:01,266] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2019-03-17 23:15:01,266] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2019-03-17 23:15:01,266] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2019-03-17 23:15:19,433] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2019-03-17 23:15:19,459] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2019-03-17 23:15:19,466] INFO [Controller 0]: Initialized controller epoch to 1 and zk version 0 (kafka.controller.KafkaController)
[2019-03-17 23:15:19,472] INFO [Controller 0]: Controller 0 incremented epoch to 2 (kafka.controller.KafkaController)
[2019-03-17 23:15:19,473] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2019-03-17 23:15:19,519] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-03-17 23:15:19,520] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-03-17 23:15:19,520] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-03-17 23:15:19,524] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-03-17 23:15:19,524] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2019-03-17 23:15:19,526] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2019-03-17 23:15:19,531] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-03-17 23:15:19,532] INFO [Controller 0]: List of topics ineligible for deletion: twitterStream,twitterstream (kafka.controller.KafkaController)
[2019-03-17 23:15:19,534] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-03-17 23:15:19,534] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-03-17 23:15:19,535] INFO [Controller 0]: Current list of topics in the cluster: Set(twitterStream, twitterstream) (kafka.controller.KafkaController)
[2019-03-17 23:15:19,538] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=twitterstream,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=twitterStream,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2019-03-17 23:15:19,551] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitterStream,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2019-03-17 23:15:19,562] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitterstream,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2019-03-17 23:15:19,566] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([twitterStream,0] -> OfflinePartition, [twitterstream,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2019-03-17 23:15:19,569] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2019-03-17 23:15:19,570] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-03-17 23:15:19,571] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2019-03-17 23:15:19,581] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2019-03-17 23:15:19,584] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2019-03-17 23:15:19,666] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2019-03-17 23:15:19,703] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2019-03-17 23:15:19,703] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-03-17 23:15:19,715] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2019-03-17 23:15:19,748] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2019-03-17 23:15:19,763] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to around-gce-es.us-east1-b.c.durable-cacao-231702.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-03-17 23:15:19,768] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=twitterStream,Partition=0,Replica=0],[Topic=twitterstream,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2019-03-17 23:15:19,794] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [twitterStream,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-03-17 23:15:19,796] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [twitterStream,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2019-03-17 23:15:19,878] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([twitterStream,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [twitterstream,0] -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1)) (kafka.controller.PartitionStateMachine)
[2019-03-17 23:15:19,909] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [twitterstream,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2019-03-17 23:15:19,909] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":1,"isr":[0]} for offline partition [twitterstream,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2019-03-17 23:15:19,923] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([twitterStream,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2), [twitterstream,0] -> (Leader:0,ISR:0,LeaderEpoch:1,ControllerEpoch:2)) (kafka.controller.PartitionStateMachine)
[2019-03-17 23:15:24,582] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:15:24,584] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:15:24,586] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:15:24,587] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:20:24,581] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:20:24,582] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:20:24,582] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:20:24,582] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:25:24,581] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:25:24,582] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:25:24,582] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:25:24,582] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:30:24,581] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:30:24,582] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:30:24,582] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:30:24,582] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:35:24,581] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:35:24,582] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:35:24,582] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:35:24,582] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:40:24,581] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:40:24,582] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:40:24,582] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:40:24,582] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:45:24,581] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:45:24,582] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:45:24,582] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:45:24,582] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:50:24,581] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:50:24,582] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:50:24,582] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:50:24,582] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2019-03-17 23:55:24,581] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2019-03-17 23:55:24,582] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterStream,0] -> List(0), [twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2019-03-17 23:55:24,582] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2019-03-17 23:55:24,582] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
